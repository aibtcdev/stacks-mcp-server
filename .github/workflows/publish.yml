name: Publish Package to npm

# Trigger this workflow when a new release is published
on:
  release:
    types: [published]

# Grant write permissions to update repository contents
permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.repository.default_branch }}

      # Step 2: Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run TypeScript type checking
      - name: Type check
        run: npm run typecheck

      # Step 5: Build the project
      - name: Build project
        run: npm run build

      # Step 6: Run tests
      - name: Run tests
        run: npm test

      # Step 7: Update package.json with release tag version
      - name: Update package.json with release tag
        run: |
          TAG="${{ github.event.release.tag_name }}"
          # Remove 'v' prefix if present (e.g., v1.0.1 -> 1.0.1)
          VERSION=${TAG#v}
          echo "Updating package.json version to $VERSION"
          npm version "$VERSION" --no-git-tag-version

      # Step 8: Commit and push version update back to repository
      - name: Commit and push version update
        run: |
          TAG="${{ github.event.release.tag_name }}"
          VERSION=${TAG#v}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore: update package.json to version $VERSION [skip ci]"
          git push origin ${{ github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Publish to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Step 10: Create a success comment on the release
      - name: Comment on release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createReleaseComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ github.event.release.id }},
              body: `ðŸš€ Package successfully published to npm!\n\nðŸ“¦ **stacks-mcp-server@${{ github.event.release.tag_name }}**\n\n- Install: \`npm install stacks-mcp-server\`\n- Use with npx: \`npx stacks-mcp-server\`\n\nView on npm: https://www.npmjs.com/package/stacks-mcp-server`
            }); 